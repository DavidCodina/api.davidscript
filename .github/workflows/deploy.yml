name: Deploy

on:
  push:
    # Set up branch protection to prevent directly pushing to main or master. Then the
    # Deploy workflow push event should only be triggered through merging a pull request.
    branches:
      - main
      - master

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      # Cache dependencies. Must be done in all jobs that install dependencies.
      # This seems to speed up the process by about 20s.
      # https://www.udemy.com/course/github-actions-the-complete-guide/learn/lecture/34139976#overview
      - name: Cache Dependencies
        # https://github.com/actions/cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Build Project
        run: npm run build
        # https://www.udemy.com/course/github-actions-the-complete-guide/learn/lecture/34139932#overview
      - name: Upload Build Artifacts
        # https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    needs: [build]
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Download Build Artifacts
        # https://github.com/actions/download-artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      # - name: Verify dist artifact contents
      #   run: ls

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: npm ci

      - name: Create Deployment Package
        # Assumes a package.json script of:
        # "zip": "bestzip upload.zip dist/* package.json",
        run: npm run zip

      - name: Configure AWS credentials
        # https://github.com/aws-actions/configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # The aws-cli comes pre-installed on GitHub Actions' Ubuntu runners, including ubuntu-latest. This means you don't
      # need to install any additional tools for the aws lambda command to work in your GitHub workflow.
      - name: Deploy to Lambda
        run: |
          aws lambda update-function-code \
            --function-name davidscript-server \
            --zip-file fileb://upload.zip

  # bonus:
  #   needs: deploy
  #   name: Bonus
  #   runs-on: ubuntu-latest
  #   steps:
  #     # https://docs.github.com/en/actions/learn-github-actions/contexts
  #     - name: Bonus - output context of github
  #       run: echo "${{ toJSON(github) }}"
